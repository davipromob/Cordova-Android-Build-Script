name: Build Production Android

on: workflow_dispatch

env:
  API_SERVER: ${{ secrets.PRODUCTION_API_SERVER }}
  CORDOVA_ANDROID: false
  CORDOVA_IOS: false
  BUGSNAG_API_KEY: ${{ secrets.PRODUCTION_BUGSNAG_API_KEY }}
  MEMED_API_BASE_URL: ${{ secrets.PRODUCTION_MEMED_API_BASE_URL }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:

  test_lint_flow:
    name: Run eslint and flowtype tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['14.20.0']
    env:
      CORDOVA_ANDROID: false
      CORDOVA_IOS: false
    steps:
      - uses: actions/checkout@v2
      - name: Install System Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y curl wget sudo
          sudo apt install git -y
      # Setup node version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-www-dev
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v2-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-v2-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install npm packages
      - name: Install Packages
        run: yarn
      # Prepare webpack files
      - name: Prepare autogenerated files
        run: yarn webpack:prepare
      # Run linter test
      - name: Test Linter
        run: yarn lint
      # Run flow test
      - name: Run Flow Type Checker
        run: yarn flow-test

  build_production_android:
    name: Build Android Production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['14.20.0']
    env:
      CORDOVA_ANDROID: true
      CORDOVA_IOS: false
    steps:

      - uses: actions/checkout@v3

      # Install system tools
      - name: Install System Tools
        run: |
          sudo apt update -y
          sudo apt-get install -y curl wget
          sudo apt install git -y
      # Setup node version
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install

      # Build web APP
      - name: Build React App
        run: |
          yarn build
          yarn webpack:prepare && yarn platform:android

      # Build android aab
      - name: Build Android AAB
        uses: nethergrim/setup-cordova@0.0.12
        with:
          exec: |
            npx cordova build android --no-telemetry --release
          # npx cordova build android --no-telemetry --debug

      # Upload www artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-production-android
          path: ./platforms/android/app/build/outputs/bundle/release/app-release.aab
          # path: ./platforms/android/app/build/outputs/bundle/debug/app-debug.aab
          if-no-files-found: error

  slack_report:
    needs: [test_lint_flow, build_production_android]
    if: always()
    name: Send report to Slack
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['14.20.0']
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: actions/checkout@v2
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      # Setup node version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      # Install npm packages
      - name: Install Packages
        run: |
          yarn add @slack/webhook
          yarn add moment
          yarn add lodash
      - name: Slack Notification
        env:
          PR_NUMBER: ${{ steps.findPr.outputs.pr }}
          REPORT_TYPE: Production
          GITHUB_BRANCH: ${{ github.ref }}
        run: yarn actions:report
